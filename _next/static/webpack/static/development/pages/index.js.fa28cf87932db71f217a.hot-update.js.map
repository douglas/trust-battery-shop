{"version":3,"file":"static/webpack/static/development/pages/index.js.fa28cf87932db71f217a.hot-update.js","sources":["webpack:///./components/Track.js"],"sourcesContent":["// @flow\n\nimport { scores, categoryColorScale } from '../constants/constants'\nimport { tracks } from '../constants/tracks'\nimport React from 'react'\nimport type { MilestoneMap, Milestone } from '../constants/constants'\nimport type { TrackId } from '../constants/tracks'\n\ntype Props = {\n  milestoneByTrack: MilestoneMap,\n  trackId: TrackId,\n  handleTrackMilestoneChangeFn: (TrackId, Milestone) => void\n}\n\nclass Track extends React.Component<Props> {\n  \n  render() {\n    const track = tracks[this.props.trackId]\n    const currentMilestoneId = this.props.milestoneByTrack[this.props.trackId]\n    function getMilestoneText(milestone) {\n      switch(milestone) {\n        case 0: return 'Never'\n        case 1: return 'Rarely'\n        case 2: return 'Sometimes'\n        case 3: return 'Often'\n        case 4: return 'Always'\n        default: return 'Never'\n      }\n    }\n    return (\n      <div className=\"track\">\n        <style jsx>{`\n          div.track {\n            margin: 0 0 20px 0;\n            padding-bottom: 20px;\n            border-bottom: 2px solid #ccc;\n          }\n          h2 {\n            margin: 0 0 10px 0;\n          }\n          p.track-description {\n            margin-top: 0;\n            padding-bottom: 20px;\n            border-bottom: 2px solid #ccc;\n          }\n          table {\n            border-spacing: 3px;\n          }\n          .milestone {\n            line-height: 50px;\n            width: 50px;\n            text-align: center;\n            font-weight: bold;\n            font-size: 24px;\n            border-radius: 3px;\n            cursor: pointer;\n          }\n          \n          ul {\n            line-height: 1.5em;\n          }\n        `}</style>\n        <h2>{track.displayName}</h2>\n        <p className=\"track-description\">{track.description.short}</p>\n        <div style={{display: 'flex'}}>\n          <table style={{flex: 0, marginRight: 50}}>\n            <tbody>\n              {scores.slice().reverse().map((milestone) => {\n                const isMet = milestone <= currentMilestoneId\n                return (\n                  <tr key={milestone}>\n                    <td class='milestone' onClick={() => this.props.handleTrackMilestoneChangeFn(this.props.trackId, milestone)}\n                        style={{border: `4px solid ${milestone === currentMilestoneId ? '#000' : isMet ? categoryColorScale(track.category) : '#eee'}`, background: isMet ? categoryColorScale(track.category) : '#eee'}}>\n                      {milestone}\n                    </td>\n                    <td>\n                      {getMilestoneText(milestone)}\n                    </td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n            <div style={{flex: 1}}>\n              <h3>{track.description.detailed}</h3>\n              <h4>Example behaviours:</h4>\n              <ul>\n                {track.examples.map((example, i) => (\n                  <li key={i}>{example}</li>\n                ))}\n              </ul>\n            </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Track\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AASA;;;;;;;;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AANA;AAQA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgjFA;AACA;AAmFA;;;;A","sourceRoot":""}