{"version":3,"file":"static/webpack/static/development/pages/index.js.bf0d164ef7748f382939.hot-update.js","sources":["webpack:///./constants/constants.js"],"sourcesContent":["// @flow\nimport * as d3 from 'd3'\nimport { tracks, trackIds } from '../constants/tracks'\nimport type { TrackId } from '../constants/tracks'\n\nexport type Score = 0 | 1 | 2 | 3 | 4\nexport const scores = [0, 1, 2, 3, 4]\n\nexport type MilestoneMap = {\n  'KEEP_PROMISES': Milestone,\n  'MEET_DEADLINES': Milestone,\n  'ON_TIME': Milestone,\n  'DEPENDABLE': Milestone,\n  'CONTENT_EXPERTISE': Milestone,\n  'PASSION': Milestone,\n  'CHALLENGE_CUSTOMERS': Milestone,\n  'HUMILITY': Milestone,\n  'ACCEPTANCE': Milestone,\n  'OPENNESS': Milestone,\n  'EMOTIONAL_HONESTY': Milestone,\n  'AUTHENTICITY': Milestone,\n  'FOCUSSING_ON_OTHERS': Milestone,\n  'LISTENING': Milestone,\n  'COMPASSION': Milestone,\n  'COLLABORATION': Milestone\n}\n\nexport type Milestone = {\n  level: Number,\n  description: string,\n  points: Number\n}\n\ntype Milestones = {|\n  0: Milestone,\n  1: Milestone,\n  2: Milestone,\n  3: Milestone,\n  4: Milestone\n|}\n\nexport const milestones: Milestones = {\n  0: { level: 0, description: 'Never', points: 0 },\n  1: { level: 1, description: 'Rarely', points: 1 },\n  2: { level: 2, description: 'Sometimes', points: 2 },\n  3: { level: 3, description: 'Often', points: 3 },\n  4: { level: 4, description: 'Always', points: 4 }\n}\n\nexport const pointsToLevels = {\n  '0': '1.1',\n  '3': '1.2',\n  '7': '1.3',\n  '10': '2.1',\n  '14': '2.2',\n  '17': '2.3',\n  '22': '3.1',\n  '26': '3.2',\n  '30': '3.3',\n  '35': '4.1',\n  '40': '4.2',\n  '44': '4.3',\n  '54': '5.1',\n  '66': '5.2',\n  '81': '5.3',\n}\n\nexport const maxLevel = 81\n\n\n\nexport const categoryIds: Set<string> = trackIds.reduce((set, trackId) => {\n  set.add(tracks[trackId].category)\n  return set\n}, new Set())\n\nexport const categoryPointsFromMilestoneMap = (milestoneMap: MilestoneMap) => {\n  let pointsByCategory = new Map()\n  trackIds.forEach((trackId) => {\n    const milestone = milestoneMap[trackId]\n    const categoryId = tracks[trackId].category\n    let currentPoints = pointsByCategory.get(categoryId) || 0\n    pointsByCategory.set(categoryId, currentPoints + milestones[milestone].points)\n  })\n  return Array.from(categoryIds.values()).map(categoryId => {\n    const points = pointsByCategory.get(categoryId)\n    return { categoryId, points: pointsByCategory.get(categoryId) || 0 }\n  })\n}\n\nexport const totalPointsFromMilestoneMap = (milestoneMap: MilestoneMap): number =>\n  trackIds.map(trackId => milestones[milestoneMap[trackId]].points).reduce((sum, addend) => (sum + addend), 0)\n\nexport const categoryColorScale = d3.scaleOrdinal()\n  .domain(categoryIds)\n  .range(['#47C1BF', '#006FBB', '#EEC200', '#F49342'])\n\nexport const titles = [\n  {label: 'Engineer I', minPoints: 0, maxPoints: 16},\n  {label: 'Engineer II', minPoints: 17, maxPoints: 35},\n  {label: 'Senior Engineer', minPoints: 36, maxPoints: 57},\n  {label: 'Group Lead', minPoints: 36, maxPoints: 57},\n  {label: 'Staff Engineer', minPoints: 58, maxPoints: 89},\n  {label: 'Senior Group Lead', minPoints: 58, maxPoints: 89},\n  {label: 'Principal Engineer', minPoints: 90},\n  {label: 'Director of Engineering', minPoints: 90}\n]\n\nexport const eligibleTitles = (milestoneMap: MilestoneMap): string[] => {\n  const totalPoints = totalPointsFromMilestoneMap(milestoneMap)\n\n  return titles.filter(title => (title.minPoints === undefined || totalPoints >= title.minPoints)\n                             && (title.maxPoints === undefined || totalPoints <= title.maxPoints))\n    .map(title => title.label)\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAIA;AAmCA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAkBA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;;;;A","sourceRoot":""}